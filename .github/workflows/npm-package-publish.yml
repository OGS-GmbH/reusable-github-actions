name: npm Package Publish

on:
  workflow_call:
    secrets:
      NPM_ORG_OGS_GMBH_CI:
        required: true
      FONTAWESOME_REGISTRY_AUTH_TOKEN:
        required: true

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_ORG_OGS_GMBH_CI }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_ORG_OGS_GMBH_CI }}
      NPM_CONFIG_PROVENANCE: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup pnpm cache dir
        run: |
          PNPM_STORE_PATH="$( pnpm store path --silent )"
          if [ ! -d "$PNPM_STORE_PATH" ]; then
            mkdir -p "$PNPM_STORE_PATH"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: "lts/*"
          cache: "pnpm"

      - name: Prepare Dependency Registries
        run: |
          echo "@fortawesome:registry = https://npm.fontawesome.com/" >> .npmrc
          echo "//npm.fontawesome.com/:_authToken=${{ secrets.FONTAWESOME_REGISTRY_AUTH_TOKEN }}" >> .npmrc

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Run pre-Build-specific scripts
        run: pnpm run --if-present "/^ci:build:pre:.*/"

      - name: Run Build
        run: pnpm run "/^ci:build:main:.*/"

      - name: Run post-Build-specific scripts
        run: pnpm run --if-present "/^ci:build:post:.*/"

      - name: Run Publish
        run: pnpm publish --no-git-checks --access public
